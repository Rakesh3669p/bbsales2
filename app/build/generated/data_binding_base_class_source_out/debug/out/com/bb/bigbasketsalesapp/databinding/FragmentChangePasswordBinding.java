// Generated by view binder compiler. Do not edit!
package com.bb.bigbasketsalesapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.bb.bigbasketsalesapp.R;
import com.google.android.material.button.MaterialButton;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentChangePasswordBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextView changePasswordLbl;

  @NonNull
  public final MaterialButton confirmSubmit;

  @NonNull
  public final EditText newPasswordEdt;

  @NonNull
  public final EditText passwordEdt;

  private FragmentChangePasswordBinding(@NonNull ConstraintLayout rootView,
      @NonNull TextView changePasswordLbl, @NonNull MaterialButton confirmSubmit,
      @NonNull EditText newPasswordEdt, @NonNull EditText passwordEdt) {
    this.rootView = rootView;
    this.changePasswordLbl = changePasswordLbl;
    this.confirmSubmit = confirmSubmit;
    this.newPasswordEdt = newPasswordEdt;
    this.passwordEdt = passwordEdt;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentChangePasswordBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentChangePasswordBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_change_password, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentChangePasswordBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.changePasswordLbl;
      TextView changePasswordLbl = ViewBindings.findChildViewById(rootView, id);
      if (changePasswordLbl == null) {
        break missingId;
      }

      id = R.id.confirmSubmit;
      MaterialButton confirmSubmit = ViewBindings.findChildViewById(rootView, id);
      if (confirmSubmit == null) {
        break missingId;
      }

      id = R.id.newPasswordEdt;
      EditText newPasswordEdt = ViewBindings.findChildViewById(rootView, id);
      if (newPasswordEdt == null) {
        break missingId;
      }

      id = R.id.passwordEdt;
      EditText passwordEdt = ViewBindings.findChildViewById(rootView, id);
      if (passwordEdt == null) {
        break missingId;
      }

      return new FragmentChangePasswordBinding((ConstraintLayout) rootView, changePasswordLbl,
          confirmSubmit, newPasswordEdt, passwordEdt);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
