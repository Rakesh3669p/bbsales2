// Generated by view binder compiler. Do not edit!
package com.bb.bigbasketsalesapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.constraintlayout.utils.widget.ImageFilterView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.bb.bigbasketsalesapp.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemCutomersBinding implements ViewBinding {
  @NonNull
  private final CardView rootView;

  @NonNull
  public final ImageView moreIcon;

  @NonNull
  public final TextView revenueCity;

  @NonNull
  public final TextView revenueCode;

  @NonNull
  public final ImageFilterView revenueImage;

  @NonNull
  public final TextView revenueName;

  private ItemCutomersBinding(@NonNull CardView rootView, @NonNull ImageView moreIcon,
      @NonNull TextView revenueCity, @NonNull TextView revenueCode,
      @NonNull ImageFilterView revenueImage, @NonNull TextView revenueName) {
    this.rootView = rootView;
    this.moreIcon = moreIcon;
    this.revenueCity = revenueCity;
    this.revenueCode = revenueCode;
    this.revenueImage = revenueImage;
    this.revenueName = revenueName;
  }

  @Override
  @NonNull
  public CardView getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemCutomersBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemCutomersBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_cutomers, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemCutomersBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.moreIcon;
      ImageView moreIcon = ViewBindings.findChildViewById(rootView, id);
      if (moreIcon == null) {
        break missingId;
      }

      id = R.id.revenueCity;
      TextView revenueCity = ViewBindings.findChildViewById(rootView, id);
      if (revenueCity == null) {
        break missingId;
      }

      id = R.id.revenueCode;
      TextView revenueCode = ViewBindings.findChildViewById(rootView, id);
      if (revenueCode == null) {
        break missingId;
      }

      id = R.id.revenueImage;
      ImageFilterView revenueImage = ViewBindings.findChildViewById(rootView, id);
      if (revenueImage == null) {
        break missingId;
      }

      id = R.id.revenueName;
      TextView revenueName = ViewBindings.findChildViewById(rootView, id);
      if (revenueName == null) {
        break missingId;
      }

      return new ItemCutomersBinding((CardView) rootView, moreIcon, revenueCity, revenueCode,
          revenueImage, revenueName);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
