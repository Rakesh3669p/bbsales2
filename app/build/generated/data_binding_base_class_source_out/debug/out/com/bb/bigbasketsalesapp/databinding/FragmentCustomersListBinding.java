// Generated by view binder compiler. Do not edit!
package com.bb.bigbasketsalesapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.ProgressBar;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.utils.widget.ImageFilterView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.bb.bigbasketsalesapp.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentCustomersListBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ImageFilterView addCustomers;

  @NonNull
  public final ImageView backArrow;

  @NonNull
  public final ProgressBar bottomLoader;

  @NonNull
  public final TextView customerListTitle;

  @NonNull
  public final RecyclerView customersListRv;

  @NonNull
  public final TextView noData;

  @NonNull
  public final EditText search;

  private FragmentCustomersListBinding(@NonNull ConstraintLayout rootView,
      @NonNull ImageFilterView addCustomers, @NonNull ImageView backArrow,
      @NonNull ProgressBar bottomLoader, @NonNull TextView customerListTitle,
      @NonNull RecyclerView customersListRv, @NonNull TextView noData, @NonNull EditText search) {
    this.rootView = rootView;
    this.addCustomers = addCustomers;
    this.backArrow = backArrow;
    this.bottomLoader = bottomLoader;
    this.customerListTitle = customerListTitle;
    this.customersListRv = customersListRv;
    this.noData = noData;
    this.search = search;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentCustomersListBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentCustomersListBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_customers_list, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentCustomersListBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.addCustomers;
      ImageFilterView addCustomers = ViewBindings.findChildViewById(rootView, id);
      if (addCustomers == null) {
        break missingId;
      }

      id = R.id.backArrow;
      ImageView backArrow = ViewBindings.findChildViewById(rootView, id);
      if (backArrow == null) {
        break missingId;
      }

      id = R.id.bottomLoader;
      ProgressBar bottomLoader = ViewBindings.findChildViewById(rootView, id);
      if (bottomLoader == null) {
        break missingId;
      }

      id = R.id.customerListTitle;
      TextView customerListTitle = ViewBindings.findChildViewById(rootView, id);
      if (customerListTitle == null) {
        break missingId;
      }

      id = R.id.customersListRv;
      RecyclerView customersListRv = ViewBindings.findChildViewById(rootView, id);
      if (customersListRv == null) {
        break missingId;
      }

      id = R.id.noData;
      TextView noData = ViewBindings.findChildViewById(rootView, id);
      if (noData == null) {
        break missingId;
      }

      id = R.id.search;
      EditText search = ViewBindings.findChildViewById(rootView, id);
      if (search == null) {
        break missingId;
      }

      return new FragmentCustomersListBinding((ConstraintLayout) rootView, addCustomers, backArrow,
          bottomLoader, customerListTitle, customersListRv, noData, search);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
