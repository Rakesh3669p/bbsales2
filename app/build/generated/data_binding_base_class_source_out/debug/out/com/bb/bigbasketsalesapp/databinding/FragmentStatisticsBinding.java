// Generated by view binder compiler. Do not edit!
package com.bb.bigbasketsalesapp.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.Spinner;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.core.widget.NestedScrollView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.bb.bigbasketsalesapp.R;
import com.github.mikephil.charting.charts.LineChart;
import com.google.android.material.card.MaterialCardView;
import com.mikhaellopez.circularprogressbar.CircularProgressBar;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentStatisticsBinding implements ViewBinding {
  @NonNull
  private final NestedScrollView rootView;

  @NonNull
  public final ImageView backArrow;

  @NonNull
  public final View blueStick;

  @NonNull
  public final TextView customerRevenue;

  @NonNull
  public final TextView customerRevenue1Lbl;

  @NonNull
  public final View customerRevenueBg;

  @NonNull
  public final ImageView customerRevenueBgIcon;

  @NonNull
  public final TextView customerRevenueCurrency;

  @NonNull
  public final TextView customerSaleslbl;

  @NonNull
  public final TextView errorMessage;

  @NonNull
  public final View greenStick;

  @NonNull
  public final View loader;

  @NonNull
  public final Spinner monthSpinner;

  @NonNull
  public final View monthlyRevenueBg;

  @NonNull
  public final TextView newCustomer;

  @NonNull
  public final TextView newCustomer1Lbl;

  @NonNull
  public final View newCustomersBg;

  @NonNull
  public final ImageView newCustomersBgIcon;

  @NonNull
  public final TextView noOfShops;

  @NonNull
  public final TextView noOfShops1Lbl;

  @NonNull
  public final View noOfShopsBg;

  @NonNull
  public final ImageView noOfShopsBgIcon;

  @NonNull
  public final TextView noStatsMessage;

  @NonNull
  public final MaterialCardView onBoardChartBg;

  @NonNull
  public final CircularProgressBar onBoardProgress;

  @NonNull
  public final MaterialCardView onBoardRateBg;

  @NonNull
  public final TextView onBoardRatelbl;

  @NonNull
  public final TextView onBoardedCustomerslbl;

  @NonNull
  public final TextView onBoardedProgressPercent;

  @NonNull
  public final LineChart onBoardingCharChart;

  @NonNull
  public final View purpleStick;

  @NonNull
  public final View redStick;

  @NonNull
  public final TextView statisticsTitle;

  @NonNull
  public final TextView toBeOnBoardedlbl;

  @NonNull
  public final TextView totalNewCustomers;

  @NonNull
  public final TextView totalNoOfShops;

  @NonNull
  public final TextView totalRevenueMonthly;

  @NonNull
  public final TextView totalRevenueMonthly1Lbl;

  @NonNull
  public final TextView totalRevenueMonthlyCurrency;

  @NonNull
  public final ImageView totalRevenueMonthlyIcon;

  @NonNull
  public final Spinner yearSpinner;

  private FragmentStatisticsBinding(@NonNull NestedScrollView rootView,
      @NonNull ImageView backArrow, @NonNull View blueStick, @NonNull TextView customerRevenue,
      @NonNull TextView customerRevenue1Lbl, @NonNull View customerRevenueBg,
      @NonNull ImageView customerRevenueBgIcon, @NonNull TextView customerRevenueCurrency,
      @NonNull TextView customerSaleslbl, @NonNull TextView errorMessage, @NonNull View greenStick,
      @NonNull View loader, @NonNull Spinner monthSpinner, @NonNull View monthlyRevenueBg,
      @NonNull TextView newCustomer, @NonNull TextView newCustomer1Lbl,
      @NonNull View newCustomersBg, @NonNull ImageView newCustomersBgIcon,
      @NonNull TextView noOfShops, @NonNull TextView noOfShops1Lbl, @NonNull View noOfShopsBg,
      @NonNull ImageView noOfShopsBgIcon, @NonNull TextView noStatsMessage,
      @NonNull MaterialCardView onBoardChartBg, @NonNull CircularProgressBar onBoardProgress,
      @NonNull MaterialCardView onBoardRateBg, @NonNull TextView onBoardRatelbl,
      @NonNull TextView onBoardedCustomerslbl, @NonNull TextView onBoardedProgressPercent,
      @NonNull LineChart onBoardingCharChart, @NonNull View purpleStick, @NonNull View redStick,
      @NonNull TextView statisticsTitle, @NonNull TextView toBeOnBoardedlbl,
      @NonNull TextView totalNewCustomers, @NonNull TextView totalNoOfShops,
      @NonNull TextView totalRevenueMonthly, @NonNull TextView totalRevenueMonthly1Lbl,
      @NonNull TextView totalRevenueMonthlyCurrency, @NonNull ImageView totalRevenueMonthlyIcon,
      @NonNull Spinner yearSpinner) {
    this.rootView = rootView;
    this.backArrow = backArrow;
    this.blueStick = blueStick;
    this.customerRevenue = customerRevenue;
    this.customerRevenue1Lbl = customerRevenue1Lbl;
    this.customerRevenueBg = customerRevenueBg;
    this.customerRevenueBgIcon = customerRevenueBgIcon;
    this.customerRevenueCurrency = customerRevenueCurrency;
    this.customerSaleslbl = customerSaleslbl;
    this.errorMessage = errorMessage;
    this.greenStick = greenStick;
    this.loader = loader;
    this.monthSpinner = monthSpinner;
    this.monthlyRevenueBg = monthlyRevenueBg;
    this.newCustomer = newCustomer;
    this.newCustomer1Lbl = newCustomer1Lbl;
    this.newCustomersBg = newCustomersBg;
    this.newCustomersBgIcon = newCustomersBgIcon;
    this.noOfShops = noOfShops;
    this.noOfShops1Lbl = noOfShops1Lbl;
    this.noOfShopsBg = noOfShopsBg;
    this.noOfShopsBgIcon = noOfShopsBgIcon;
    this.noStatsMessage = noStatsMessage;
    this.onBoardChartBg = onBoardChartBg;
    this.onBoardProgress = onBoardProgress;
    this.onBoardRateBg = onBoardRateBg;
    this.onBoardRatelbl = onBoardRatelbl;
    this.onBoardedCustomerslbl = onBoardedCustomerslbl;
    this.onBoardedProgressPercent = onBoardedProgressPercent;
    this.onBoardingCharChart = onBoardingCharChart;
    this.purpleStick = purpleStick;
    this.redStick = redStick;
    this.statisticsTitle = statisticsTitle;
    this.toBeOnBoardedlbl = toBeOnBoardedlbl;
    this.totalNewCustomers = totalNewCustomers;
    this.totalNoOfShops = totalNoOfShops;
    this.totalRevenueMonthly = totalRevenueMonthly;
    this.totalRevenueMonthly1Lbl = totalRevenueMonthly1Lbl;
    this.totalRevenueMonthlyCurrency = totalRevenueMonthlyCurrency;
    this.totalRevenueMonthlyIcon = totalRevenueMonthlyIcon;
    this.yearSpinner = yearSpinner;
  }

  @Override
  @NonNull
  public NestedScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentStatisticsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentStatisticsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_statistics, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentStatisticsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.backArrow;
      ImageView backArrow = ViewBindings.findChildViewById(rootView, id);
      if (backArrow == null) {
        break missingId;
      }

      id = R.id.blueStick;
      View blueStick = ViewBindings.findChildViewById(rootView, id);
      if (blueStick == null) {
        break missingId;
      }

      id = R.id.customerRevenue;
      TextView customerRevenue = ViewBindings.findChildViewById(rootView, id);
      if (customerRevenue == null) {
        break missingId;
      }

      id = R.id.customerRevenue1Lbl;
      TextView customerRevenue1Lbl = ViewBindings.findChildViewById(rootView, id);
      if (customerRevenue1Lbl == null) {
        break missingId;
      }

      id = R.id.customerRevenueBg;
      View customerRevenueBg = ViewBindings.findChildViewById(rootView, id);
      if (customerRevenueBg == null) {
        break missingId;
      }

      id = R.id.customerRevenueBgIcon;
      ImageView customerRevenueBgIcon = ViewBindings.findChildViewById(rootView, id);
      if (customerRevenueBgIcon == null) {
        break missingId;
      }

      id = R.id.customerRevenueCurrency;
      TextView customerRevenueCurrency = ViewBindings.findChildViewById(rootView, id);
      if (customerRevenueCurrency == null) {
        break missingId;
      }

      id = R.id.customerSaleslbl;
      TextView customerSaleslbl = ViewBindings.findChildViewById(rootView, id);
      if (customerSaleslbl == null) {
        break missingId;
      }

      id = R.id.errorMessage;
      TextView errorMessage = ViewBindings.findChildViewById(rootView, id);
      if (errorMessage == null) {
        break missingId;
      }

      id = R.id.greenStick;
      View greenStick = ViewBindings.findChildViewById(rootView, id);
      if (greenStick == null) {
        break missingId;
      }

      id = R.id.loader;
      View loader = ViewBindings.findChildViewById(rootView, id);
      if (loader == null) {
        break missingId;
      }

      id = R.id.monthSpinner;
      Spinner monthSpinner = ViewBindings.findChildViewById(rootView, id);
      if (monthSpinner == null) {
        break missingId;
      }

      id = R.id.monthlyRevenueBg;
      View monthlyRevenueBg = ViewBindings.findChildViewById(rootView, id);
      if (monthlyRevenueBg == null) {
        break missingId;
      }

      id = R.id.newCustomer;
      TextView newCustomer = ViewBindings.findChildViewById(rootView, id);
      if (newCustomer == null) {
        break missingId;
      }

      id = R.id.newCustomer1Lbl;
      TextView newCustomer1Lbl = ViewBindings.findChildViewById(rootView, id);
      if (newCustomer1Lbl == null) {
        break missingId;
      }

      id = R.id.newCustomersBg;
      View newCustomersBg = ViewBindings.findChildViewById(rootView, id);
      if (newCustomersBg == null) {
        break missingId;
      }

      id = R.id.newCustomersBgIcon;
      ImageView newCustomersBgIcon = ViewBindings.findChildViewById(rootView, id);
      if (newCustomersBgIcon == null) {
        break missingId;
      }

      id = R.id.noOfShops;
      TextView noOfShops = ViewBindings.findChildViewById(rootView, id);
      if (noOfShops == null) {
        break missingId;
      }

      id = R.id.noOfShops1Lbl;
      TextView noOfShops1Lbl = ViewBindings.findChildViewById(rootView, id);
      if (noOfShops1Lbl == null) {
        break missingId;
      }

      id = R.id.noOfShopsBg;
      View noOfShopsBg = ViewBindings.findChildViewById(rootView, id);
      if (noOfShopsBg == null) {
        break missingId;
      }

      id = R.id.noOfShopsBgIcon;
      ImageView noOfShopsBgIcon = ViewBindings.findChildViewById(rootView, id);
      if (noOfShopsBgIcon == null) {
        break missingId;
      }

      id = R.id.noStatsMessage;
      TextView noStatsMessage = ViewBindings.findChildViewById(rootView, id);
      if (noStatsMessage == null) {
        break missingId;
      }

      id = R.id.onBoardChartBg;
      MaterialCardView onBoardChartBg = ViewBindings.findChildViewById(rootView, id);
      if (onBoardChartBg == null) {
        break missingId;
      }

      id = R.id.onBoardProgress;
      CircularProgressBar onBoardProgress = ViewBindings.findChildViewById(rootView, id);
      if (onBoardProgress == null) {
        break missingId;
      }

      id = R.id.onBoardRateBg;
      MaterialCardView onBoardRateBg = ViewBindings.findChildViewById(rootView, id);
      if (onBoardRateBg == null) {
        break missingId;
      }

      id = R.id.onBoardRatelbl;
      TextView onBoardRatelbl = ViewBindings.findChildViewById(rootView, id);
      if (onBoardRatelbl == null) {
        break missingId;
      }

      id = R.id.onBoardedCustomerslbl;
      TextView onBoardedCustomerslbl = ViewBindings.findChildViewById(rootView, id);
      if (onBoardedCustomerslbl == null) {
        break missingId;
      }

      id = R.id.onBoardedProgressPercent;
      TextView onBoardedProgressPercent = ViewBindings.findChildViewById(rootView, id);
      if (onBoardedProgressPercent == null) {
        break missingId;
      }

      id = R.id.onBoardingCharChart;
      LineChart onBoardingCharChart = ViewBindings.findChildViewById(rootView, id);
      if (onBoardingCharChart == null) {
        break missingId;
      }

      id = R.id.purpleStick;
      View purpleStick = ViewBindings.findChildViewById(rootView, id);
      if (purpleStick == null) {
        break missingId;
      }

      id = R.id.redStick;
      View redStick = ViewBindings.findChildViewById(rootView, id);
      if (redStick == null) {
        break missingId;
      }

      id = R.id.statisticsTitle;
      TextView statisticsTitle = ViewBindings.findChildViewById(rootView, id);
      if (statisticsTitle == null) {
        break missingId;
      }

      id = R.id.toBeOnBoardedlbl;
      TextView toBeOnBoardedlbl = ViewBindings.findChildViewById(rootView, id);
      if (toBeOnBoardedlbl == null) {
        break missingId;
      }

      id = R.id.totalNewCustomers;
      TextView totalNewCustomers = ViewBindings.findChildViewById(rootView, id);
      if (totalNewCustomers == null) {
        break missingId;
      }

      id = R.id.totalNoOfShops;
      TextView totalNoOfShops = ViewBindings.findChildViewById(rootView, id);
      if (totalNoOfShops == null) {
        break missingId;
      }

      id = R.id.totalRevenueMonthly;
      TextView totalRevenueMonthly = ViewBindings.findChildViewById(rootView, id);
      if (totalRevenueMonthly == null) {
        break missingId;
      }

      id = R.id.totalRevenueMonthly1Lbl;
      TextView totalRevenueMonthly1Lbl = ViewBindings.findChildViewById(rootView, id);
      if (totalRevenueMonthly1Lbl == null) {
        break missingId;
      }

      id = R.id.totalRevenueMonthlyCurrency;
      TextView totalRevenueMonthlyCurrency = ViewBindings.findChildViewById(rootView, id);
      if (totalRevenueMonthlyCurrency == null) {
        break missingId;
      }

      id = R.id.totalRevenueMonthlyIcon;
      ImageView totalRevenueMonthlyIcon = ViewBindings.findChildViewById(rootView, id);
      if (totalRevenueMonthlyIcon == null) {
        break missingId;
      }

      id = R.id.yearSpinner;
      Spinner yearSpinner = ViewBindings.findChildViewById(rootView, id);
      if (yearSpinner == null) {
        break missingId;
      }

      return new FragmentStatisticsBinding((NestedScrollView) rootView, backArrow, blueStick,
          customerRevenue, customerRevenue1Lbl, customerRevenueBg, customerRevenueBgIcon,
          customerRevenueCurrency, customerSaleslbl, errorMessage, greenStick, loader, monthSpinner,
          monthlyRevenueBg, newCustomer, newCustomer1Lbl, newCustomersBg, newCustomersBgIcon,
          noOfShops, noOfShops1Lbl, noOfShopsBg, noOfShopsBgIcon, noStatsMessage, onBoardChartBg,
          onBoardProgress, onBoardRateBg, onBoardRatelbl, onBoardedCustomerslbl,
          onBoardedProgressPercent, onBoardingCharChart, purpleStick, redStick, statisticsTitle,
          toBeOnBoardedlbl, totalNewCustomers, totalNoOfShops, totalRevenueMonthly,
          totalRevenueMonthly1Lbl, totalRevenueMonthlyCurrency, totalRevenueMonthlyIcon,
          yearSpinner);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
