// Generated by Dagger (https://dagger.dev).
package com.bb.bigbasketsalesapp.ui.fragments.productList;

import com.bb.bigbasketsalesapp.ui.fragments.productList.adapter.ProductListAdapter;
import com.bb.bigbasketsalesapp.utils.SessionManager;
import dagger.MembersInjector;
import dagger.internal.DaggerGenerated;
import dagger.internal.InjectedFieldSignature;
import dagger.internal.QualifierMetadata;
import javax.inject.Provider;

@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class ProductListFragment_MembersInjector implements MembersInjector<ProductListFragment> {
  private final Provider<SessionManager> sessionProvider;

  private final Provider<ProductListAdapter> productListAdapterProvider;

  public ProductListFragment_MembersInjector(Provider<SessionManager> sessionProvider,
      Provider<ProductListAdapter> productListAdapterProvider) {
    this.sessionProvider = sessionProvider;
    this.productListAdapterProvider = productListAdapterProvider;
  }

  public static MembersInjector<ProductListFragment> create(
      Provider<SessionManager> sessionProvider,
      Provider<ProductListAdapter> productListAdapterProvider) {
    return new ProductListFragment_MembersInjector(sessionProvider, productListAdapterProvider);
  }

  @Override
  public void injectMembers(ProductListFragment instance) {
    injectSession(instance, sessionProvider.get());
    injectProductListAdapter(instance, productListAdapterProvider.get());
  }

  @InjectedFieldSignature("com.bb.bigbasketsalesapp.ui.fragments.productList.ProductListFragment.session")
  public static void injectSession(ProductListFragment instance, SessionManager session) {
    instance.session = session;
  }

  @InjectedFieldSignature("com.bb.bigbasketsalesapp.ui.fragments.productList.ProductListFragment.productListAdapter")
  public static void injectProductListAdapter(ProductListFragment instance,
      ProductListAdapter productListAdapter) {
    instance.productListAdapter = productListAdapter;
  }
}
