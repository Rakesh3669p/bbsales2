// Generated by Dagger (https://dagger.dev).
package com.bb.bigbasketsalesapp.ui.fragments.notificationMessages;

import com.bb.bigbasketsalesapp.ui.fragments.notificationMessages.adapter.ChatAdapter;
import com.bb.bigbasketsalesapp.utils.SessionManager;
import dagger.MembersInjector;
import dagger.internal.DaggerGenerated;
import dagger.internal.InjectedFieldSignature;
import dagger.internal.QualifierMetadata;
import javax.inject.Provider;

@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class ChatFragment_MembersInjector implements MembersInjector<ChatFragment> {
  private final Provider<SessionManager> sessionProvider;

  private final Provider<ChatAdapter> chatAdapterProvider;

  public ChatFragment_MembersInjector(Provider<SessionManager> sessionProvider,
      Provider<ChatAdapter> chatAdapterProvider) {
    this.sessionProvider = sessionProvider;
    this.chatAdapterProvider = chatAdapterProvider;
  }

  public static MembersInjector<ChatFragment> create(Provider<SessionManager> sessionProvider,
      Provider<ChatAdapter> chatAdapterProvider) {
    return new ChatFragment_MembersInjector(sessionProvider, chatAdapterProvider);
  }

  @Override
  public void injectMembers(ChatFragment instance) {
    injectSession(instance, sessionProvider.get());
    injectChatAdapter(instance, chatAdapterProvider.get());
  }

  @InjectedFieldSignature("com.bb.bigbasketsalesapp.ui.fragments.notificationMessages.ChatFragment.session")
  public static void injectSession(ChatFragment instance, SessionManager session) {
    instance.session = session;
  }

  @InjectedFieldSignature("com.bb.bigbasketsalesapp.ui.fragments.notificationMessages.ChatFragment.chatAdapter")
  public static void injectChatAdapter(ChatFragment instance, ChatAdapter chatAdapter) {
    instance.chatAdapter = chatAdapter;
  }
}
