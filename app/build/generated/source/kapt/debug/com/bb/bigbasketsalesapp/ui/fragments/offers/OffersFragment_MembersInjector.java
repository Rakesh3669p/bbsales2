// Generated by Dagger (https://dagger.dev).
package com.bb.bigbasketsalesapp.ui.fragments.offers;

import com.bb.bigbasketsalesapp.ui.fragments.offers.adapter.OffersAdapter;
import com.bb.bigbasketsalesapp.utils.SessionManager;
import dagger.MembersInjector;
import dagger.internal.DaggerGenerated;
import dagger.internal.InjectedFieldSignature;
import dagger.internal.QualifierMetadata;
import javax.inject.Provider;

@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class OffersFragment_MembersInjector implements MembersInjector<OffersFragment> {
  private final Provider<SessionManager> sessionProvider;

  private final Provider<OffersAdapter> offersAdapterProvider;

  public OffersFragment_MembersInjector(Provider<SessionManager> sessionProvider,
      Provider<OffersAdapter> offersAdapterProvider) {
    this.sessionProvider = sessionProvider;
    this.offersAdapterProvider = offersAdapterProvider;
  }

  public static MembersInjector<OffersFragment> create(Provider<SessionManager> sessionProvider,
      Provider<OffersAdapter> offersAdapterProvider) {
    return new OffersFragment_MembersInjector(sessionProvider, offersAdapterProvider);
  }

  @Override
  public void injectMembers(OffersFragment instance) {
    injectSession(instance, sessionProvider.get());
    injectOffersAdapter(instance, offersAdapterProvider.get());
  }

  @InjectedFieldSignature("com.bb.bigbasketsalesapp.ui.fragments.offers.OffersFragment.session")
  public static void injectSession(OffersFragment instance, SessionManager session) {
    instance.session = session;
  }

  @InjectedFieldSignature("com.bb.bigbasketsalesapp.ui.fragments.offers.OffersFragment.offersAdapter")
  public static void injectOffersAdapter(OffersFragment instance, OffersAdapter offersAdapter) {
    instance.offersAdapter = offersAdapter;
  }
}
