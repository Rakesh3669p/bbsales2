// Generated by Dagger (https://dagger.dev).
package com.bb.bigbasketsalesapp.ui.fragments.revenue;

import com.bb.bigbasketsalesapp.ui.fragments.revenue.adapter.RevenueAdapter;
import com.bb.bigbasketsalesapp.utils.SessionManager;
import dagger.MembersInjector;
import dagger.internal.DaggerGenerated;
import dagger.internal.InjectedFieldSignature;
import dagger.internal.QualifierMetadata;
import javax.inject.Provider;

@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class RevenueFragment_MembersInjector implements MembersInjector<RevenueFragment> {
  private final Provider<SessionManager> sessionProvider;

  private final Provider<RevenueAdapter> revenueAdapterProvider;

  public RevenueFragment_MembersInjector(Provider<SessionManager> sessionProvider,
      Provider<RevenueAdapter> revenueAdapterProvider) {
    this.sessionProvider = sessionProvider;
    this.revenueAdapterProvider = revenueAdapterProvider;
  }

  public static MembersInjector<RevenueFragment> create(Provider<SessionManager> sessionProvider,
      Provider<RevenueAdapter> revenueAdapterProvider) {
    return new RevenueFragment_MembersInjector(sessionProvider, revenueAdapterProvider);
  }

  @Override
  public void injectMembers(RevenueFragment instance) {
    injectSession(instance, sessionProvider.get());
    injectRevenueAdapter(instance, revenueAdapterProvider.get());
  }

  @InjectedFieldSignature("com.bb.bigbasketsalesapp.ui.fragments.revenue.RevenueFragment.session")
  public static void injectSession(RevenueFragment instance, SessionManager session) {
    instance.session = session;
  }

  @InjectedFieldSignature("com.bb.bigbasketsalesapp.ui.fragments.revenue.RevenueFragment.revenueAdapter")
  public static void injectRevenueAdapter(RevenueFragment instance, RevenueAdapter revenueAdapter) {
    instance.revenueAdapter = revenueAdapter;
  }
}
